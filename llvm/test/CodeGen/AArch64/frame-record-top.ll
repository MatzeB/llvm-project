; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -o - %s -mtriple=aarch64-none-linux-gnu | FileCheck --check-prefix=DEFAULT %s
; RUN: llc -o - %s -mtriple=aarch64-none-linux-gnu -aarch64-frame-record-top | FileCheck --check-prefix=FRTOP %s

declare i32 @other(i32 %arg);

define i32 @f0(i32 %arg) {
; DEFAULT-LABEL: f0:
; DEFAULT:       // %bb.0:
; DEFAULT-NEXT:    str x30, [sp, #-32]! // 8-byte Folded Spill
; DEFAULT-NEXT:    .cfi_def_cfa_offset 32
; DEFAULT-NEXT:    stp x20, x19, [sp, #16] // 16-byte Folded Spill
; DEFAULT-NEXT:    .cfi_offset w19, -8
; DEFAULT-NEXT:    .cfi_offset w20, -16
; DEFAULT-NEXT:    .cfi_offset w30, -32
; DEFAULT-NEXT:    mov w19, w0
; DEFAULT-NEXT:    bl other
; DEFAULT-NEXT:    mov w20, w0
; DEFAULT-NEXT:    mov w0, w19
; DEFAULT-NEXT:    bl other
; DEFAULT-NEXT:    add w0, w20, w0
; DEFAULT-NEXT:    ldp x20, x19, [sp, #16] // 16-byte Folded Reload
; DEFAULT-NEXT:    ldr x30, [sp], #32 // 8-byte Folded Reload
; DEFAULT-NEXT:    ret
;
; FRTOP-LABEL: f0:
; FRTOP:       // %bb.0:
; FRTOP-NEXT:    str x20, [sp, #-32]! // 8-byte Folded Spill
; FRTOP-NEXT:    .cfi_def_cfa_offset 32
; FRTOP-NEXT:    stp x19, x30, [sp, #16] // 16-byte Folded Spill
; FRTOP-NEXT:    .cfi_offset w30, -8
; FRTOP-NEXT:    .cfi_offset w19, -16
; FRTOP-NEXT:    .cfi_offset w20, -32
; FRTOP-NEXT:    mov w19, w0
; FRTOP-NEXT:    bl other
; FRTOP-NEXT:    mov w20, w0
; FRTOP-NEXT:    mov w0, w19
; FRTOP-NEXT:    bl other
; FRTOP-NEXT:    ldp x19, x30, [sp, #16] // 16-byte Folded Reload
; FRTOP-NEXT:    add w0, w20, w0
; FRTOP-NEXT:    ldr x20, [sp], #32 // 8-byte Folded Reload
; FRTOP-NEXT:    ret
  %t = call i32 @other(i32 %arg)
  %t2 = call i32 @other(i32 %arg)
  %tres = add i32 %t, %t2
  ret i32 %tres
}
